<template>
  <view class="new">
    <view class="center" style="color:white;font-size:30px;height: 60px;z-index:2; width: {{screenWidth}}px;position:fixed; bottom: 0;">
        <!-- <text style="color:white;font-size:30px;">{{lang == 'EN' ? 'Answer' : '回答'}}</text> -->
        <view @tap.stop="send" hover-class="clickSend" class="center" style="margin-right:2px;box-shadow:1px 1px 10px 0px #20BEEC;flex:1;height:100%;background-color: #20BEEC;">
          <text>发送</text>
        </view>
    </view>

    <textarea
      class="textarea"
      auto-focus
      bindinput="inputChange"
      maxlength="-1"
      placeholder="留下你的足迹..."
      placeholder-style="">
    </textarea>
    <view wx:if="{{type != 'comment'}}" class="image-list">
      <!-- preview the image which already be choosed -->
      <view
        class="choosed-image-list"
        wx:for="{{ images }}"
        wx:for-item="image"
        wx:for-index="idx"
        wx:key="{{ idx }}">
        <image
          src="{{ image }}"
          mode="aspectFill"
          @tap.stop="previewImage({{ image }}, {{ images }})"
          class="choosed-image"></image>
        <view
          class="choosed-image-delete-btn"
          @tap.stop="deleteImage({{ idx }})">
          <image
            class="choosed-image-delete-btn-icon"
            src="../assets/img/delete.svg"></image>
        </view>
      </view>
      <!-- image choosing btn -->
      <view
        wx:if="{{ images.length < 9 }}"
        bindtap="chooseImage">
        <!-- <image
          class="choose-image-btn-icon"
          src="../assets/img/choose-image.svg">
        </image> -->
        <view class="center" style="border-right:1px solid white;background-color:rgb(229, 229, 229);width:100px; height: 100px">
          <image src='../assets/img/choose-image2.png' style="width:40px; height:40px;" />
        </view>
      </view>
    </view>
    <view class="isanonymous">
      <view
        class="location {{ location === '' ? '' : 'location-active' }}"
        @tap.stop="chooseLocation"
        @longtap.stop="removeLocation">
        <image class="location-icon" src="../assets/img/location.svg"></image>
        <text>{{ location === '' ? '点击添加位置' : location }}</text>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import api from './../api/api'

export default class NewBlog extends wepy.page {
  config = {
    navigationBarBackgroundColor: '#20BEEC',
    navigationBarTitleText: ''
  }

  data = {
    screenWidth: wepy.getSystemInfoSync().windowWidth,
    screenHeight: wepy.getSystemInfoSync().windowHeight,
    content: '',
    images: [],
    location: '',
    latitude: '',
    longitude: '',
    type: '',
    currentUser_id: '',
    post_id: ''
  }
  onLoad (option) {
    this.type = option.type
    this.currentUser_id = option.user_id
    this.post_id = option.post_id
    // console.log(this.currentUser_id);
    if(this.type == 'comment') {
      wepy.setNavigationBarTitle({title: '编辑评论'})
    } else if( this.type == 'post' ){
      wepy.setNavigationBarTitle({title: '编辑心情'})
    }
  }
  methods = {
    /**
     * 输入监听器
     * 自动映射到 content
     * @param {Event} e 输入事件
     */
    inputChange (e) {
      this.content = e.detail.value
    },

    /**
     * 选择图片
     */
    async chooseImage () {
      const { tempFilePaths } = await wepy.chooseImage({
        count: 9 - this.images.length,
        sizeType: 'compressed'
      })
      this.images.push(...tempFilePaths)
      this.$apply()
    },

    /**
     * 查看大图
     * @param {String} cur 当前展示图片
     * @param {Array}  imageList 展示的图片列表
     */
    previewImage (cur, imageList) {
      wepy.previewImage({
        current: cur,
        urls: imageList
      })
    },

    /**
     * 删除选中图片
     * @param {Number} idx 要删除的图片索引
     */
    deleteImage (idx) {
      this.images.splice(idx, 1)
      this.$apply()
    },

    /**
     * 添加位置
     */
    async chooseLocation () {
      try {
        const { name, latitude, longitude } = await wepy.chooseLocation()
        this.location = name
        this.latitude = latitude
        this.longitude = longitude
        this.$apply()
      } catch (e) {}
    },

    /**
     * 删除地理位置
     */
    removeLocation () {
      this.location = ''
      this.latitude = ''
      this.longitude = ''
      this.$apply()
    },
    /**
     * 发送树洞
     */
    async send () {
      wepy.showToast({
        title: '发送中...',
        icon: 'loading',
        duration: 10000,
        mask: true
      })
      // console.log('this.currentUser_id: ' + this.currentUser_id);
      const pack = {
        user_id: this.currentUser_id,
        type: this.type,
        content: this.content,
        images: [],
        location: this.location,
        latitude: this.latitude,
        longitude: this.longitude
      }
      if(this.type = 'comment') {
        pack.to_post = this.post_id
      }
      // upload images
      // upload images
      if (this.images.length > 0) {
        try {
          for (let v of this.images) {
            const r = await wepy.uploadFile({
              url: 'http://127.0.0.1:8000/api/upload/image',
              filePath: v,
              name: 'file',
              success: function(res) {
                console.log('image has been successfully saved in server. Congrats!')
              }
            })

            r.data = JSON.parse(r.data)
            if (r.data.img) {
              pack.images.push(r.data.img)
            } else {
              wepy.hideToast()
              wepy.showModal({
                title: '提示',
                content: '服务器错误，上传图片失败。请重试~：）' + r.data.errmsg,
                showCancel: false
              })
            }
          }
        } catch (e) {
          wepy.hideToast()
          wepy.showModal({
            title: '提示',
            content: '服务器错误，上传图片失败。' + e.message,
            showCancel: false
          })
          return
        }
      }

      // upload blog
      try {
        console.log('pack; ' + JSON.stringify(pack))
        var res = await api.newPost({
          query: {
            pack: pack
          },
          method: "POST"
        })
        if(res.data && res.data.flag == 'success') {
          // console.log('data from post: res.data:  ' + JSON.stringify(res.data));
          wepy.hideToast()
          await wepy.showToast({
            title: '发送成功！',
            icon: 'success',
            duration: 1500,
            mask: true
          })
          wepy.navigateBack({
            delta: 1
          })
        }
      } catch (e) {
        wepy.hideToast()
        wepy.showModal({
          title: '提示',
          content: '请截图本提示，联系泽铭。' + e.message,
          showCancel: false
        })
        return
      }
    }
  }
}
</script>

<style lang="less">
.clickSend {
  animation: pushBtn 300ms ease;
}
@keyframes pushBtn {
  0% {
    transform: scale(1);
    box-shadow:0 0 10px #20BEEC;
  }
  50% {
    transform: scale(0.95);
    box-shadow:inset 0 0 10px #20BEEC;
  }
  100% {
    transform: scale(1);
    box-shadow:0 0 10px #20BEEC;
  }
}
.new {
  width: 100%;

  .textarea {
    border-radius: 2px;
    margin: 2%;
    width: 96%;
    border:1px solid rgb(232,232,232);
    color: #333;
    min-height: 180px;
    background: #FFF;
    font-size: 16px;
    // line-height: 36px;
  }

  .image-list {
    margin: 2%;
    width: 96%;
    background: #FFF;
    overflow: hidden;
    padding-top:10px;

    .choosed-image-list {
      position: relative;
      float: left;
      width: 100px;
      height: 100px;
      margin-right: 15px;

      .choosed-image {
        width: 100%;
        height: 100%;
      }

      .choosed-image-delete-btn {
        position: absolute;
        right: -10px;
        top: -10px;
        width: 20px;
        height: 20px;
      }

      .choosed-image-delete-btn-icon {
        width: 20px;
        height: 20px;
      }
    }
  }

  .isanonymous {
    background: #FFF;
    margin: 2%;
    overflow: hidden;

    .location {
      float: left;
      width: 250px;
      height: 32px;

      .location-icon {
        width: 32px;
        height: 32px;
        vertical-align: middle;
      }

      text {
        font-size: 14px;
        line-height: 32px;
        color: #666;
      }
    }
    .location-active {
      text {
        font-weight: bold;
        color: #FA6570;
      }
    }
  }

}
</style>
