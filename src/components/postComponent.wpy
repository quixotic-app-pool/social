<style lang="less">
</style>
<template>
    <view style="border-radius:2px;margin-top:5px;width:100%;padding:10px;box-sizing:border-box;background-color:white;padding-bottom:0;">
      <view style="display: flex;">
        <view style="flex:2;">
          <image src="{{postData.from_user.avatarUrl ? postData.from_user.avatarUrl : '../assets/img/boy.jpeg'}}" style=" border-radius:100%;width:50px; height:50px;"/>
        </view>
        <view style="flex:8;">
          <view class="center" style="justify-content:flex-start;">
            <text>{{postData.from_user.intro.nickName}}</text>
            <image src="{{postData.from_user.intro.gender == 0 ? '../assets/img/female.png': '../assets/img/male.png'}}" style="padding:0 5px;width:20px; height:20px;"/>
            <!-- <view class="center" style="padding:0 6px;border-radius:10px;background-color:rgb(249,198,45)">
              <text style="color:white;font-size:12px;">Lv5</text>
            </view> -->
          </view>
          <view style="font-size:12px;opacity:0.6;">
            {{postData.timeDiff}}
          </view>
        </view>
        <view @tap.stop="moreOption">
          <image src="../assets/img/more.png" style="opacity:0.3;position:absolite;right:10px;width:30px; height:30px;"/>
        </view>
      </view>
      <view>
        <!-- <text style="color:rgb(95,112,139)">#主题跳转#</text> -->
        <text>{{postData.msg}}</text>
      </view>
      <view style="padding:10px 0;">
        <repeat
         for="{{postData.imgUrls}}"
         item= "subItem"
         index= "index"
         key= "index">
         <image @tap.stop="previewImage({{ subItem }}, {{ postData.imgUrls }})" mode="aspectFill" src="{{subItem}}" style="padding:{{index%3 == 1 ? '0 5px': ''}};width:{{(screenWidth -30)/3}}px; height:{{screenWidth/3}}px;" />
        </repeat>
      </view>
      <view class="center" style="justify-content: flex-end;border-top: 1px dashed rgb(232,232,232)">
        <!-- <view class="center" style="padding: 10px 0;">
          <image src="../assets/img/share.png" style="width:20px; height:20px;padding-right:10px;"/>
          <text style="font-size:15px; opacity:0.6;">转发</text>
        </view> -->
        <view @tap.stop="go('detailPage')" class="center" style="padding: 10px 0;padding-right:20px;">
          <image src="../assets/img/comment.png" style="width:20px; height:20px;padding-right:5px;"/>
          <text style="font-size:15px; opacity:0.6;">{{postData.comments.length || ''}}</text>
        </view>
        <view @tap.stop="like()" hover-class="click" class="center" style="padding: 10px 0;">
          <image src="{{postData.likedBy.length ? '../assets/img/like-fill.png' : '../assets/img/like-empty.png'}}" style="width:20px; height:20px;padding-right:5px;"/>
          <text style="font-size:15px; opacity:0.6;">{{postData.likedBy.length || ''}}</text>
        </view>
      </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from './../api/api'
  import util from '../utils/util'

  export default class Index extends wepy.component {
    config = {
      navigationBarBackgroundColor: '#FFD300'
    }
    props = {
      postData: {
        type: Object,
        default: {}
      }
    }
    data = {
      screenWidth: wepy.getSystemInfoSync().windowWidth,
      screenHeight: wepy.getSystemInfoSync().windowHeight,
      currentUser_id: ''
    }
    onLoad () {
      this.currentUser_id = wepy.getStorageSync('UserId')
    }
    methods = {
      previewImage (cur, imageList) {
        wepy.previewImage({
          current: cur,
          urls: imageList
        })
      },
      async like () {
        // TODO: update like
         var self = this
         var res = await api.like({
           query: {
             pack: {
               user_id: self.currentUser_id,
               post_id: self.postData._id
             }
           },
           method: 'POST'
         })
        //  console.log('like: ' + JSON.stringify(res.data))
         if(res.data && res.data.flag == 'success') {
           this.postData.likedBy.push(this.currentUser_id)
           this.$apply()
          //  list = res.data.data
         }
      },
      go () {
        wepy.navigateTo({
          url: 'detailPage?post_id=' + this.postData._id
        })
      },
      moreOption () {
        wepy.showActionSheet({
          itemList: ['删除','取消关注', '举报']
        }).then(async function(res){
          // if(res.tapIndex == 0) {
          //   var r = await api.delPost({
          //     pack: {
          //       user_id: this.user_id
          //     }
          //   })
          //   if(res.data && res.data.flag == 'success') {
          //
          //   }
          // }
          // if(res.tapIndex = 1) {
          //   var r = await api.subscribe({
          //     pack: {
          //       user_id: this.user_id
          //     }
          //   })
          //   if(res.data && res.data.flag == 'success') {
          //
          //   }
          // } else {
          //   var r = await api.report({
          //     pack: {
          //       user_id: this.user_id
          //     }
          //   })
          //   if(res.data && res.data.flag == 'success') {
          //
          //   }
          // }
        })
      },
    }
  }
</script>
